# Generated by Django 4.1.5 on 2023-02-14 20:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inspi.models
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "title",
                    models.CharField(
                        max_length=40,
                        validators=[
                            django.core.validators.MinLengthValidator(5),
                            django.core.validators.MaxLengthValidator(40),
                        ],
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        default="",
                        max_length=8000,
                        validators=[django.core.validators.MaxLengthValidator(8000)],
                    ),
                ),
                ("description_detail", models.CharField(default="", max_length=1)),
                (
                    "costs_rating",
                    models.SmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "execution_time",
                    models.SmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "preparation_time",
                    models.SmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "difficulty",
                    models.SmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_by_email", models.CharField(blank=True, max_length=60)),
                ("like_score", models.IntegerField(default=0)),
                ("view_count", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Experiment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("age_level", models.IntegerField(null=True)),
                ("group_type", models.IntegerField(null=True)),
                ("group_leader", models.IntegerField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "image",
                    stdimage.models.JPEGField(
                        blank=True,
                        force_min_size=False,
                        upload_to=inspi.models.nameFile,
                        variations={
                            "big": (800, 600),
                            "default": (400, 266),
                            "small": (200, 133),
                        },
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MaterialUnit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=30)),
                ("description", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TagCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=20)),
                ("description", models.CharField(blank=True, max_length=100)),
                ("sorting", models.IntegerField(unique=True)),
                ("icon", models.CharField(blank=True, max_length=20, null=True)),
                ("is_header", models.BooleanField(default=False)),
                ("is_mandatory", models.BooleanField(default=False)),
                ("is_activity_overview", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=20)),
                ("description", models.CharField(blank=True, max_length=100)),
                ("color", models.CharField(max_length=7)),
                ("icon", models.CharField(blank=True, max_length=20, null=True)),
                ("sorting", models.IntegerField(null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inspi.tagcategory",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NextBestHeimabend",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "score",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ref",
                        to="inspi.activity",
                    ),
                ),
                (
                    "activity_score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score",
                        to="inspi.activity",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MaterialName",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=30)),
                ("description", models.CharField(blank=True, max_length=100)),
                (
                    "unit_detaults",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inspi.materialunit",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MaterialItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("quantity", models.IntegerField(default=0)),
                ("number_of_participants", models.IntegerField(blank=True, default=0)),
                (
                    "activity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="material_list",
                        to="inspi.activity",
                    ),
                ),
                (
                    "material_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inspi.materialname",
                    ),
                ),
                (
                    "material_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inspi.materialunit",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                (
                    "opinion_type_id",
                    models.IntegerField(
                        choices=[(1, "Like"), (-1, "Dislike")], default=1
                    ),
                ),
                ("like_created", models.DateTimeField(auto_now_add=True)),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="inspi.activity"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImageMeta",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("description", models.CharField(max_length=255)),
                ("is_open_source", models.BooleanField(default=False)),
                ("privacy_consent", models.BooleanField(default=False)),
                (
                    "photographer_name",
                    models.CharField(blank=True, default="", max_length=100),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "activity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_id",
                        to="inspi.activity",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inspi.image",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ExperimentItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("score", models.IntegerField(null=True)),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="inspi.activity"
                    ),
                ),
                (
                    "experiment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inspi.experiment",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ActivityOfTheWeek",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20, null=True)),
                ("updated_by", models.CharField(blank=True, max_length=20, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("release_date", models.DateField(blank=True, null=True)),
                ("comment", models.CharField(blank=True, max_length=2000, null=True)),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="inspi.activity"
                    ),
                ),
                ("tags", models.ManyToManyField(default="", to="inspi.tag")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="activity",
            name="tags",
            field=models.ManyToManyField(default="", to="inspi.tag"),
        ),
    ]
